<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2118" onload="init(evt)" viewBox="0 0 1200 2118" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2118" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2101.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2101.00"> </text><svg id="frames" x="10" width="1180" total_samples="500"><g><title>_int_malloc (7 samples, 1.40%)</title><rect x="19.8000%" y="1829" width="1.4000%" height="15" fill="rgb(252,35,15)" fg:x="99" fg:w="7"/><text x="20.0500%" y="1839.50"></text></g><g><title>tcache_put (7 samples, 1.40%)</title><rect x="19.8000%" y="1813" width="1.4000%" height="15" fill="rgb(248,181,18)" fg:x="99" fg:w="7"/><text x="20.0500%" y="1823.50"></text></g><g><title>__GI___libc_malloc (50 samples, 10.00%)</title><rect x="19.8000%" y="1845" width="10.0000%" height="15" fill="rgb(233,39,42)" fg:x="99" fg:w="50"/><text x="20.0500%" y="1855.50">__GI___libc_ma..</text></g><g><title>tcache_try_malloc (43 samples, 8.60%)</title><rect x="21.2000%" y="1829" width="8.6000%" height="15" fill="rgb(238,110,33)" fg:x="106" fg:w="43"/><text x="21.4500%" y="1839.50">tcache_try_m..</text></g><g><title>tcache_available (43 samples, 8.60%)</title><rect x="21.2000%" y="1813" width="8.6000%" height="15" fill="rgb(233,195,10)" fg:x="106" fg:w="43"/><text x="21.4500%" y="1823.50">tcache_avail..</text></g><g><title>__rdl_alloc (7 samples, 1.40%)</title><rect x="29.8000%" y="1845" width="1.4000%" height="15" fill="rgb(254,105,3)" fg:x="149" fg:w="7"/><text x="30.0500%" y="1855.50"></text></g><g><title>__GI___libc_free (1 samples, 0.20%)</title><rect x="31.2000%" y="1701" width="0.2000%" height="15" fill="rgb(221,225,9)" fg:x="156" fg:w="1"/><text x="31.4500%" y="1711.50"></text></g><g><title>__GI___libc_free (1 samples, 0.20%)</title><rect x="31.4000%" y="1685" width="0.2000%" height="15" fill="rgb(224,227,45)" fg:x="157" fg:w="1"/><text x="31.6500%" y="1695.50"></text></g><g><title>_int_free (1 samples, 0.20%)</title><rect x="31.4000%" y="1669" width="0.2000%" height="15" fill="rgb(229,198,43)" fg:x="157" fg:w="1"/><text x="31.6500%" y="1679.50"></text></g><g><title>_int_free_chunk (1 samples, 0.20%)</title><rect x="31.4000%" y="1653" width="0.2000%" height="15" fill="rgb(206,209,35)" fg:x="157" fg:w="1"/><text x="31.6500%" y="1663.50"></text></g><g><title>__GI___libc_free (1 samples, 0.20%)</title><rect x="31.6000%" y="1669" width="0.2000%" height="15" fill="rgb(245,195,53)" fg:x="158" fg:w="1"/><text x="31.8500%" y="1679.50"></text></g><g><title>_int_free (1 samples, 0.20%)</title><rect x="31.6000%" y="1653" width="0.2000%" height="15" fill="rgb(240,92,26)" fg:x="158" fg:w="1"/><text x="31.8500%" y="1663.50"></text></g><g><title>tcache_free (1 samples, 0.20%)</title><rect x="31.6000%" y="1637" width="0.2000%" height="15" fill="rgb(207,40,23)" fg:x="158" fg:w="1"/><text x="31.8500%" y="1647.50"></text></g><g><title>__GI___libc_free (1 samples, 0.20%)</title><rect x="31.8000%" y="837" width="0.2000%" height="15" fill="rgb(223,111,35)" fg:x="159" fg:w="1"/><text x="32.0500%" y="847.50"></text></g><g><title>_int_free (1 samples, 0.20%)</title><rect x="31.8000%" y="821" width="0.2000%" height="15" fill="rgb(229,147,28)" fg:x="159" fg:w="1"/><text x="32.0500%" y="831.50"></text></g><g><title>_int_free_chunk (1 samples, 0.20%)</title><rect x="31.8000%" y="805" width="0.2000%" height="15" fill="rgb(211,29,28)" fg:x="159" fg:w="1"/><text x="32.0500%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="31.2000%" y="1845" width="1.0000%" height="15" fill="rgb(228,72,33)" fg:x="156" fg:w="5"/><text x="31.4500%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="31.2000%" y="1829" width="1.0000%" height="15" fill="rgb(205,214,31)" fg:x="156" fg:w="5"/><text x="31.4500%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="31.2000%" y="1813" width="1.0000%" height="15" fill="rgb(224,111,15)" fg:x="156" fg:w="5"/><text x="31.4500%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="31.2000%" y="1797" width="1.0000%" height="15" fill="rgb(253,21,26)" fg:x="156" fg:w="5"/><text x="31.4500%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="31.2000%" y="1781" width="1.0000%" height="15" fill="rgb(245,139,43)" fg:x="156" fg:w="5"/><text x="31.4500%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="31.2000%" y="1765" width="1.0000%" height="15" fill="rgb(252,170,7)" fg:x="156" fg:w="5"/><text x="31.4500%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="31.2000%" y="1749" width="1.0000%" height="15" fill="rgb(231,118,14)" fg:x="156" fg:w="5"/><text x="31.4500%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="31.2000%" y="1733" width="1.0000%" height="15" fill="rgb(238,83,0)" fg:x="156" fg:w="5"/><text x="31.4500%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="31.2000%" y="1717" width="1.0000%" height="15" fill="rgb(221,39,39)" fg:x="156" fg:w="5"/><text x="31.4500%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="31.4000%" y="1701" width="0.8000%" height="15" fill="rgb(222,119,46)" fg:x="157" fg:w="4"/><text x="31.6500%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (3 samples, 0.60%)</title><rect x="31.6000%" y="1685" width="0.6000%" height="15" fill="rgb(222,165,49)" fg:x="158" fg:w="3"/><text x="31.8500%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1669" width="0.4000%" height="15" fill="rgb(219,113,52)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1653" width="0.4000%" height="15" fill="rgb(214,7,15)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1637" width="0.4000%" height="15" fill="rgb(235,32,4)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1621" width="0.4000%" height="15" fill="rgb(238,90,54)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1605" width="0.4000%" height="15" fill="rgb(213,208,19)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1589" width="0.4000%" height="15" fill="rgb(233,156,4)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1573" width="0.4000%" height="15" fill="rgb(207,194,5)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1557" width="0.4000%" height="15" fill="rgb(206,111,30)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1541" width="0.4000%" height="15" fill="rgb(243,70,54)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1525" width="0.4000%" height="15" fill="rgb(242,28,8)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1509" width="0.4000%" height="15" fill="rgb(219,106,18)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1493" width="0.4000%" height="15" fill="rgb(244,222,10)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1477" width="0.4000%" height="15" fill="rgb(236,179,52)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1461" width="0.4000%" height="15" fill="rgb(213,23,39)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1445" width="0.4000%" height="15" fill="rgb(238,48,10)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1429" width="0.4000%" height="15" fill="rgb(251,196,23)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1413" width="0.4000%" height="15" fill="rgb(250,152,24)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1397" width="0.4000%" height="15" fill="rgb(209,150,17)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1381" width="0.4000%" height="15" fill="rgb(234,202,34)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1365" width="0.4000%" height="15" fill="rgb(253,148,53)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1349" width="0.4000%" height="15" fill="rgb(218,129,16)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1333" width="0.4000%" height="15" fill="rgb(216,85,19)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1317" width="0.4000%" height="15" fill="rgb(235,228,7)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1301" width="0.4000%" height="15" fill="rgb(245,175,0)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1285" width="0.4000%" height="15" fill="rgb(208,168,36)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1269" width="0.4000%" height="15" fill="rgb(246,171,24)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1253" width="0.4000%" height="15" fill="rgb(215,142,24)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1237" width="0.4000%" height="15" fill="rgb(250,187,7)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1221" width="0.4000%" height="15" fill="rgb(228,66,33)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1205" width="0.4000%" height="15" fill="rgb(234,215,21)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1189" width="0.4000%" height="15" fill="rgb(222,191,20)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1173" width="0.4000%" height="15" fill="rgb(245,79,54)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1157" width="0.4000%" height="15" fill="rgb(240,10,37)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1141" width="0.4000%" height="15" fill="rgb(214,192,32)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1125" width="0.4000%" height="15" fill="rgb(209,36,54)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1109" width="0.4000%" height="15" fill="rgb(220,10,11)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1093" width="0.4000%" height="15" fill="rgb(221,106,17)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1077" width="0.4000%" height="15" fill="rgb(251,142,44)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1061" width="0.4000%" height="15" fill="rgb(238,13,15)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1045" width="0.4000%" height="15" fill="rgb(208,107,27)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1029" width="0.4000%" height="15" fill="rgb(205,136,37)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="1013" width="0.4000%" height="15" fill="rgb(250,205,27)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="997" width="0.4000%" height="15" fill="rgb(210,80,43)" fg:x="159" fg:w="2"/><text x="32.0500%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="981" width="0.4000%" height="15" fill="rgb(247,160,36)" fg:x="159" fg:w="2"/><text x="32.0500%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="965" width="0.4000%" height="15" fill="rgb(234,13,49)" fg:x="159" fg:w="2"/><text x="32.0500%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="949" width="0.4000%" height="15" fill="rgb(234,122,0)" fg:x="159" fg:w="2"/><text x="32.0500%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="933" width="0.4000%" height="15" fill="rgb(207,146,38)" fg:x="159" fg:w="2"/><text x="32.0500%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="917" width="0.4000%" height="15" fill="rgb(207,177,25)" fg:x="159" fg:w="2"/><text x="32.0500%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="901" width="0.4000%" height="15" fill="rgb(211,178,42)" fg:x="159" fg:w="2"/><text x="32.0500%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="885" width="0.4000%" height="15" fill="rgb(230,69,54)" fg:x="159" fg:w="2"/><text x="32.0500%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="869" width="0.4000%" height="15" fill="rgb(214,135,41)" fg:x="159" fg:w="2"/><text x="32.0500%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="31.8000%" y="853" width="0.4000%" height="15" fill="rgb(237,67,25)" fg:x="159" fg:w="2"/><text x="32.0500%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="837" width="0.2000%" height="15" fill="rgb(222,189,50)" fg:x="160" fg:w="1"/><text x="32.2500%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="821" width="0.2000%" height="15" fill="rgb(245,148,34)" fg:x="160" fg:w="1"/><text x="32.2500%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="805" width="0.2000%" height="15" fill="rgb(222,29,6)" fg:x="160" fg:w="1"/><text x="32.2500%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="789" width="0.2000%" height="15" fill="rgb(221,189,43)" fg:x="160" fg:w="1"/><text x="32.2500%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="773" width="0.2000%" height="15" fill="rgb(207,36,27)" fg:x="160" fg:w="1"/><text x="32.2500%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="757" width="0.2000%" height="15" fill="rgb(217,90,24)" fg:x="160" fg:w="1"/><text x="32.2500%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="741" width="0.2000%" height="15" fill="rgb(224,66,35)" fg:x="160" fg:w="1"/><text x="32.2500%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="725" width="0.2000%" height="15" fill="rgb(221,13,50)" fg:x="160" fg:w="1"/><text x="32.2500%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="709" width="0.2000%" height="15" fill="rgb(236,68,49)" fg:x="160" fg:w="1"/><text x="32.2500%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="693" width="0.2000%" height="15" fill="rgb(229,146,28)" fg:x="160" fg:w="1"/><text x="32.2500%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="677" width="0.2000%" height="15" fill="rgb(225,31,38)" fg:x="160" fg:w="1"/><text x="32.2500%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="661" width="0.2000%" height="15" fill="rgb(250,208,3)" fg:x="160" fg:w="1"/><text x="32.2500%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="645" width="0.2000%" height="15" fill="rgb(246,54,23)" fg:x="160" fg:w="1"/><text x="32.2500%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="629" width="0.2000%" height="15" fill="rgb(243,76,11)" fg:x="160" fg:w="1"/><text x="32.2500%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="613" width="0.2000%" height="15" fill="rgb(245,21,50)" fg:x="160" fg:w="1"/><text x="32.2500%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="597" width="0.2000%" height="15" fill="rgb(228,9,43)" fg:x="160" fg:w="1"/><text x="32.2500%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="581" width="0.2000%" height="15" fill="rgb(208,100,47)" fg:x="160" fg:w="1"/><text x="32.2500%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="565" width="0.2000%" height="15" fill="rgb(232,26,8)" fg:x="160" fg:w="1"/><text x="32.2500%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="549" width="0.2000%" height="15" fill="rgb(216,166,38)" fg:x="160" fg:w="1"/><text x="32.2500%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="533" width="0.2000%" height="15" fill="rgb(251,202,51)" fg:x="160" fg:w="1"/><text x="32.2500%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="517" width="0.2000%" height="15" fill="rgb(254,216,34)" fg:x="160" fg:w="1"/><text x="32.2500%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="501" width="0.2000%" height="15" fill="rgb(251,32,27)" fg:x="160" fg:w="1"/><text x="32.2500%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="485" width="0.2000%" height="15" fill="rgb(208,127,28)" fg:x="160" fg:w="1"/><text x="32.2500%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="469" width="0.2000%" height="15" fill="rgb(224,137,22)" fg:x="160" fg:w="1"/><text x="32.2500%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="453" width="0.2000%" height="15" fill="rgb(254,70,32)" fg:x="160" fg:w="1"/><text x="32.2500%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="437" width="0.2000%" height="15" fill="rgb(229,75,37)" fg:x="160" fg:w="1"/><text x="32.2500%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="421" width="0.2000%" height="15" fill="rgb(252,64,23)" fg:x="160" fg:w="1"/><text x="32.2500%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="405" width="0.2000%" height="15" fill="rgb(232,162,48)" fg:x="160" fg:w="1"/><text x="32.2500%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="389" width="0.2000%" height="15" fill="rgb(246,160,12)" fg:x="160" fg:w="1"/><text x="32.2500%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="373" width="0.2000%" height="15" fill="rgb(247,166,0)" fg:x="160" fg:w="1"/><text x="32.2500%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="357" width="0.2000%" height="15" fill="rgb(249,219,21)" fg:x="160" fg:w="1"/><text x="32.2500%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="341" width="0.2000%" height="15" fill="rgb(205,209,3)" fg:x="160" fg:w="1"/><text x="32.2500%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="325" width="0.2000%" height="15" fill="rgb(243,44,1)" fg:x="160" fg:w="1"/><text x="32.2500%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="309" width="0.2000%" height="15" fill="rgb(206,159,16)" fg:x="160" fg:w="1"/><text x="32.2500%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="293" width="0.2000%" height="15" fill="rgb(244,77,30)" fg:x="160" fg:w="1"/><text x="32.2500%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="277" width="0.2000%" height="15" fill="rgb(218,69,12)" fg:x="160" fg:w="1"/><text x="32.2500%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="261" width="0.2000%" height="15" fill="rgb(212,87,7)" fg:x="160" fg:w="1"/><text x="32.2500%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="245" width="0.2000%" height="15" fill="rgb(245,114,25)" fg:x="160" fg:w="1"/><text x="32.2500%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="229" width="0.2000%" height="15" fill="rgb(210,61,42)" fg:x="160" fg:w="1"/><text x="32.2500%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="32.0000%" y="213" width="0.2000%" height="15" fill="rgb(211,52,33)" fg:x="160" fg:w="1"/><text x="32.2500%" y="223.50"></text></g><g><title>__GI___libc_free (1 samples, 0.20%)</title><rect x="32.0000%" y="197" width="0.2000%" height="15" fill="rgb(234,58,33)" fg:x="160" fg:w="1"/><text x="32.2500%" y="207.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (12 samples, 2.40%)</title><rect x="32.2000%" y="1845" width="2.4000%" height="15" fill="rgb(220,115,36)" fg:x="161" fg:w="12"/><text x="32.4500%" y="1855.50">ra..</text></g><g><title>_int_free_check (66 samples, 13.20%)</title><rect x="45.2000%" y="1797" width="13.2000%" height="15" fill="rgb(243,153,54)" fg:x="226" fg:w="66"/><text x="45.4500%" y="1807.50">_int_free_check</text></g><g><title>__GI___libc_free (69 samples, 13.80%)</title><rect x="45.2000%" y="1829" width="13.8000%" height="15" fill="rgb(251,47,18)" fg:x="226" fg:w="69"/><text x="45.4500%" y="1839.50">__GI___libc_free</text></g><g><title>_int_free (69 samples, 13.80%)</title><rect x="45.2000%" y="1813" width="13.8000%" height="15" fill="rgb(242,102,42)" fg:x="226" fg:w="69"/><text x="45.4500%" y="1823.50">_int_free</text></g><g><title>_int_free_chunk (3 samples, 0.60%)</title><rect x="58.4000%" y="1797" width="0.6000%" height="15" fill="rgb(234,31,38)" fg:x="292" fg:w="3"/><text x="58.6500%" y="1807.50"></text></g><g><title>__GI___libc_malloc (36 samples, 7.20%)</title><rect x="59.0000%" y="1829" width="7.2000%" height="15" fill="rgb(221,117,51)" fg:x="295" fg:w="36"/><text x="59.2500%" y="1839.50">__GI___lib..</text></g><g><title>tcache_try_malloc (36 samples, 7.20%)</title><rect x="59.0000%" y="1813" width="7.2000%" height="15" fill="rgb(212,20,18)" fg:x="295" fg:w="36"/><text x="59.2500%" y="1823.50">tcache_try..</text></g><g><title>tcache_get (36 samples, 7.20%)</title><rect x="59.0000%" y="1797" width="7.2000%" height="15" fill="rgb(245,133,36)" fg:x="295" fg:w="36"/><text x="59.2500%" y="1807.50">tcache_get</text></g><g><title>tcache_get_n (36 samples, 7.20%)</title><rect x="59.0000%" y="1781" width="7.2000%" height="15" fill="rgb(212,6,19)" fg:x="295" fg:w="36"/><text x="59.2500%" y="1791.50">tcache_get..</text></g><g><title>__rdl_alloc (5 samples, 1.00%)</title><rect x="66.2000%" y="1829" width="1.0000%" height="15" fill="rgb(218,1,36)" fg:x="331" fg:w="5"/><text x="66.4500%" y="1839.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.20%)</title><rect x="67.2000%" y="1829" width="0.2000%" height="15" fill="rgb(246,84,54)" fg:x="336" fg:w="1"/><text x="67.4500%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (338 samples, 67.60%)</title><rect x="0.0000%" y="1877" width="67.6000%" height="15" fill="rgb(242,110,6)" fg:x="0" fg:w="338"/><text x="0.2500%" y="1887.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (338 samples, 67.60%)</title><rect x="0.0000%" y="1861" width="67.6000%" height="15" fill="rgb(214,47,5)" fg:x="0" fg:w="338"/><text x="0.2500%" y="1871.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>simple_list::immutable::queue::Queue&lt;T&gt;::dequeue (165 samples, 33.00%)</title><rect x="34.6000%" y="1845" width="33.0000%" height="15" fill="rgb(218,159,25)" fg:x="173" fg:w="165"/><text x="34.8500%" y="1855.50">simple_list::immutable::queue::Queue&lt;T&gt;::dequeue</text></g><g><title>simple_list::immutable::queue::Queue&lt;T&gt;::dequeue (1 samples, 0.20%)</title><rect x="67.4000%" y="1829" width="0.2000%" height="15" fill="rgb(215,211,28)" fg:x="337" fg:w="1"/><text x="67.6500%" y="1839.50"></text></g><g><title>_int_malloc (3 samples, 0.60%)</title><rect x="74.8000%" y="1829" width="0.6000%" height="15" fill="rgb(238,59,32)" fg:x="374" fg:w="3"/><text x="75.0500%" y="1839.50"></text></g><g><title>__GI___libc_malloc (29 samples, 5.80%)</title><rect x="74.8000%" y="1845" width="5.8000%" height="15" fill="rgb(226,82,3)" fg:x="374" fg:w="29"/><text x="75.0500%" y="1855.50">__GI___..</text></g><g><title>tcache_try_malloc (26 samples, 5.20%)</title><rect x="75.4000%" y="1829" width="5.2000%" height="15" fill="rgb(240,164,32)" fg:x="377" fg:w="26"/><text x="75.6500%" y="1839.50">tcache..</text></g><g><title>checked_request2size (26 samples, 5.20%)</title><rect x="75.4000%" y="1813" width="5.2000%" height="15" fill="rgb(232,46,7)" fg:x="377" fg:w="26"/><text x="75.6500%" y="1823.50">checke..</text></g><g><title>__rdl_alloc (4 samples, 0.80%)</title><rect x="80.6000%" y="1845" width="0.8000%" height="15" fill="rgb(229,129,53)" fg:x="403" fg:w="4"/><text x="80.8500%" y="1855.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.20%)</title><rect x="81.4000%" y="1317" width="0.2000%" height="15" fill="rgb(234,188,29)" fg:x="407" fg:w="1"/><text x="81.6500%" y="1327.50"></text></g><g><title>__GI___libc_free (1 samples, 0.20%)</title><rect x="81.6000%" y="1253" width="0.2000%" height="15" fill="rgb(246,141,4)" fg:x="408" fg:w="1"/><text x="81.8500%" y="1263.50"></text></g><g><title>_int_free (1 samples, 0.20%)</title><rect x="81.6000%" y="1237" width="0.2000%" height="15" fill="rgb(229,23,39)" fg:x="408" fg:w="1"/><text x="81.8500%" y="1247.50"></text></g><g><title>tcache_free (1 samples, 0.20%)</title><rect x="81.6000%" y="1221" width="0.2000%" height="15" fill="rgb(206,12,3)" fg:x="408" fg:w="1"/><text x="81.8500%" y="1231.50"></text></g><g><title>__GI___libc_free (1 samples, 0.20%)</title><rect x="81.8000%" y="821" width="0.2000%" height="15" fill="rgb(252,226,20)" fg:x="409" fg:w="1"/><text x="82.0500%" y="831.50"></text></g><g><title>_int_free (1 samples, 0.20%)</title><rect x="81.8000%" y="805" width="0.2000%" height="15" fill="rgb(216,123,35)" fg:x="409" fg:w="1"/><text x="82.0500%" y="815.50"></text></g><g><title>_int_free_chunk (1 samples, 0.20%)</title><rect x="81.8000%" y="789" width="0.2000%" height="15" fill="rgb(212,68,40)" fg:x="409" fg:w="1"/><text x="82.0500%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1845" width="0.8000%" height="15" fill="rgb(254,125,32)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1829" width="0.8000%" height="15" fill="rgb(253,97,22)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1813" width="0.8000%" height="15" fill="rgb(241,101,14)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1797" width="0.8000%" height="15" fill="rgb(238,103,29)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1781" width="0.8000%" height="15" fill="rgb(233,195,47)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1765" width="0.8000%" height="15" fill="rgb(246,218,30)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1749" width="0.8000%" height="15" fill="rgb(219,145,47)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1733" width="0.8000%" height="15" fill="rgb(243,12,26)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1717" width="0.8000%" height="15" fill="rgb(214,87,16)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1701" width="0.8000%" height="15" fill="rgb(208,99,42)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1685" width="0.8000%" height="15" fill="rgb(253,99,2)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1669" width="0.8000%" height="15" fill="rgb(220,168,23)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1653" width="0.8000%" height="15" fill="rgb(242,38,24)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1637" width="0.8000%" height="15" fill="rgb(225,182,9)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1621" width="0.8000%" height="15" fill="rgb(243,178,37)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1605" width="0.8000%" height="15" fill="rgb(232,139,19)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1589" width="0.8000%" height="15" fill="rgb(225,201,24)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1573" width="0.8000%" height="15" fill="rgb(221,47,46)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1557" width="0.8000%" height="15" fill="rgb(249,23,13)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1541" width="0.8000%" height="15" fill="rgb(219,9,5)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1525" width="0.8000%" height="15" fill="rgb(254,171,16)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1509" width="0.8000%" height="15" fill="rgb(230,171,20)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1493" width="0.8000%" height="15" fill="rgb(210,71,41)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1477" width="0.8000%" height="15" fill="rgb(206,173,20)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1461" width="0.8000%" height="15" fill="rgb(233,88,34)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1445" width="0.8000%" height="15" fill="rgb(223,209,46)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1429" width="0.8000%" height="15" fill="rgb(250,43,18)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1413" width="0.8000%" height="15" fill="rgb(208,13,10)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1397" width="0.8000%" height="15" fill="rgb(212,200,36)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1381" width="0.8000%" height="15" fill="rgb(225,90,30)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1365" width="0.8000%" height="15" fill="rgb(236,182,39)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1349" width="0.8000%" height="15" fill="rgb(212,144,35)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (4 samples, 0.80%)</title><rect x="81.4000%" y="1333" width="0.8000%" height="15" fill="rgb(228,63,44)" fg:x="407" fg:w="4"/><text x="81.6500%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (3 samples, 0.60%)</title><rect x="81.6000%" y="1317" width="0.6000%" height="15" fill="rgb(228,109,6)" fg:x="408" fg:w="3"/><text x="81.8500%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (3 samples, 0.60%)</title><rect x="81.6000%" y="1301" width="0.6000%" height="15" fill="rgb(238,117,24)" fg:x="408" fg:w="3"/><text x="81.8500%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (3 samples, 0.60%)</title><rect x="81.6000%" y="1285" width="0.6000%" height="15" fill="rgb(242,26,26)" fg:x="408" fg:w="3"/><text x="81.8500%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (3 samples, 0.60%)</title><rect x="81.6000%" y="1269" width="0.6000%" height="15" fill="rgb(221,92,48)" fg:x="408" fg:w="3"/><text x="81.8500%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="81.8000%" y="1253" width="0.4000%" height="15" fill="rgb(209,209,32)" fg:x="409" fg:w="2"/><text x="82.0500%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="81.8000%" y="1237" width="0.4000%" height="15" fill="rgb(221,70,22)" fg:x="409" fg:w="2"/><text x="82.0500%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="81.8000%" y="1221" width="0.4000%" height="15" fill="rgb(248,145,5)" fg:x="409" fg:w="2"/><text x="82.0500%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="81.8000%" y="1205" width="0.4000%" height="15" fill="rgb(226,116,26)" fg:x="409" fg:w="2"/><text x="82.0500%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="81.8000%" y="1189" width="0.4000%" height="15" fill="rgb(244,5,17)" fg:x="409" fg:w="2"/><text x="82.0500%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="81.8000%" y="1173" width="0.4000%" height="15" fill="rgb(252,159,33)" fg:x="409" fg:w="2"/><text x="82.0500%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="81.8000%" y="1157" width="0.4000%" height="15" fill="rgb(206,71,0)" fg:x="409" fg:w="2"/><text x="82.0500%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="81.8000%" y="1141" width="0.4000%" height="15" fill="rgb(233,118,54)" fg:x="409" fg:w="2"/><text x="82.0500%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="81.8000%" y="1125" width="0.4000%" height="15" fill="rgb(234,83,48)" fg:x="409" fg:w="2"/><text x="82.0500%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="81.8000%" y="1109" width="0.4000%" height="15" fill="rgb(228,3,54)" fg:x="409" fg:w="2"/><text x="82.0500%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="81.8000%" y="1093" width="0.4000%" height="15" fill="rgb(226,155,13)" fg:x="409" fg:w="2"/><text x="82.0500%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="81.8000%" y="1077" width="0.4000%" height="15" fill="rgb(241,28,37)" fg:x="409" fg:w="2"/><text x="82.0500%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="81.8000%" y="1061" width="0.4000%" height="15" fill="rgb(233,93,10)" fg:x="409" fg:w="2"/><text x="82.0500%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="81.8000%" y="1045" width="0.4000%" height="15" fill="rgb(225,113,19)" fg:x="409" fg:w="2"/><text x="82.0500%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="81.8000%" y="1029" width="0.4000%" height="15" fill="rgb(241,2,18)" fg:x="409" fg:w="2"/><text x="82.0500%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="81.8000%" y="1013" width="0.4000%" height="15" fill="rgb(228,207,21)" fg:x="409" fg:w="2"/><text x="82.0500%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="81.8000%" y="997" width="0.4000%" height="15" fill="rgb(213,211,35)" fg:x="409" fg:w="2"/><text x="82.0500%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="81.8000%" y="981" width="0.4000%" height="15" fill="rgb(209,83,10)" fg:x="409" fg:w="2"/><text x="82.0500%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="81.8000%" y="965" width="0.4000%" height="15" fill="rgb(209,164,1)" fg:x="409" fg:w="2"/><text x="82.0500%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="81.8000%" y="949" width="0.4000%" height="15" fill="rgb(213,184,43)" fg:x="409" fg:w="2"/><text x="82.0500%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="81.8000%" y="933" width="0.4000%" height="15" fill="rgb(231,61,34)" fg:x="409" fg:w="2"/><text x="82.0500%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="81.8000%" y="917" width="0.4000%" height="15" fill="rgb(235,75,3)" fg:x="409" fg:w="2"/><text x="82.0500%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="81.8000%" y="901" width="0.4000%" height="15" fill="rgb(220,106,47)" fg:x="409" fg:w="2"/><text x="82.0500%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="81.8000%" y="885" width="0.4000%" height="15" fill="rgb(210,196,33)" fg:x="409" fg:w="2"/><text x="82.0500%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="81.8000%" y="869" width="0.4000%" height="15" fill="rgb(229,154,42)" fg:x="409" fg:w="2"/><text x="82.0500%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="81.8000%" y="853" width="0.4000%" height="15" fill="rgb(228,114,26)" fg:x="409" fg:w="2"/><text x="82.0500%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="81.8000%" y="837" width="0.4000%" height="15" fill="rgb(208,144,1)" fg:x="409" fg:w="2"/><text x="82.0500%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="82.0000%" y="821" width="0.2000%" height="15" fill="rgb(239,112,37)" fg:x="410" fg:w="1"/><text x="82.2500%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="82.0000%" y="805" width="0.2000%" height="15" fill="rgb(210,96,50)" fg:x="410" fg:w="1"/><text x="82.2500%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="82.0000%" y="789" width="0.2000%" height="15" fill="rgb(222,178,2)" fg:x="410" fg:w="1"/><text x="82.2500%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="82.0000%" y="773" width="0.2000%" height="15" fill="rgb(226,74,18)" fg:x="410" fg:w="1"/><text x="82.2500%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (1 samples, 0.20%)</title><rect x="82.0000%" y="757" width="0.2000%" height="15" fill="rgb(225,67,54)" fg:x="410" fg:w="1"/><text x="82.2500%" y="767.50"></text></g><g><title>__GI___libc_free (1 samples, 0.20%)</title><rect x="82.0000%" y="741" width="0.2000%" height="15" fill="rgb(251,92,32)" fg:x="410" fg:w="1"/><text x="82.2500%" y="751.50"></text></g><g><title>rand_chacha::guts::refill_wide (1 samples, 0.20%)</title><rect x="82.2000%" y="1845" width="0.2000%" height="15" fill="rgb(228,149,22)" fg:x="411" fg:w="1"/><text x="82.4500%" y="1855.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (7 samples, 1.40%)</title><rect x="82.4000%" y="1845" width="1.4000%" height="15" fill="rgb(243,54,13)" fg:x="412" fg:w="7"/><text x="82.6500%" y="1855.50"></text></g><g><title>_int_free_chunk (2 samples, 0.40%)</title><rect x="88.8000%" y="1797" width="0.4000%" height="15" fill="rgb(243,180,28)" fg:x="444" fg:w="2"/><text x="89.0500%" y="1807.50"></text></g><g><title>__GI___libc_free (34 samples, 6.80%)</title><rect x="88.8000%" y="1829" width="6.8000%" height="15" fill="rgb(208,167,24)" fg:x="444" fg:w="34"/><text x="89.0500%" y="1839.50">__GI___li..</text></g><g><title>_int_free (34 samples, 6.80%)</title><rect x="88.8000%" y="1813" width="6.8000%" height="15" fill="rgb(245,73,45)" fg:x="444" fg:w="34"/><text x="89.0500%" y="1823.50">_int_free</text></g><g><title>tcache_free (32 samples, 6.40%)</title><rect x="89.2000%" y="1797" width="6.4000%" height="15" fill="rgb(237,203,48)" fg:x="446" fg:w="32"/><text x="89.4500%" y="1807.50">tcache_f..</text></g><g><title>__GI___libc_malloc (14 samples, 2.80%)</title><rect x="95.6000%" y="1829" width="2.8000%" height="15" fill="rgb(211,197,16)" fg:x="478" fg:w="14"/><text x="95.8500%" y="1839.50">__..</text></g><g><title>tcache_try_malloc (14 samples, 2.80%)</title><rect x="95.6000%" y="1813" width="2.8000%" height="15" fill="rgb(243,99,51)" fg:x="478" fg:w="14"/><text x="95.8500%" y="1823.50">tc..</text></g><g><title>tcache_available (14 samples, 2.80%)</title><rect x="95.6000%" y="1797" width="2.8000%" height="15" fill="rgb(215,123,29)" fg:x="478" fg:w="14"/><text x="95.8500%" y="1807.50">tc..</text></g><g><title>__rdl_alloc (1 samples, 0.20%)</title><rect x="98.4000%" y="1829" width="0.2000%" height="15" fill="rgb(239,186,37)" fg:x="492" fg:w="1"/><text x="98.6500%" y="1839.50"></text></g><g><title>_start (495 samples, 99.00%)</title><rect x="0.0000%" y="2037" width="99.0000%" height="15" fill="rgb(252,136,39)" fg:x="0" fg:w="495"/><text x="0.2500%" y="2047.50">_start</text></g><g><title>__libc_start_main_impl (495 samples, 99.00%)</title><rect x="0.0000%" y="2021" width="99.0000%" height="15" fill="rgb(223,213,32)" fg:x="0" fg:w="495"/><text x="0.2500%" y="2031.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (495 samples, 99.00%)</title><rect x="0.0000%" y="2005" width="99.0000%" height="15" fill="rgb(233,115,5)" fg:x="0" fg:w="495"/><text x="0.2500%" y="2015.50">__libc_start_call_main</text></g><g><title>main (495 samples, 99.00%)</title><rect x="0.0000%" y="1989" width="99.0000%" height="15" fill="rgb(207,226,44)" fg:x="0" fg:w="495"/><text x="0.2500%" y="1999.50">main</text></g><g><title>std::rt::lang_start_internal (495 samples, 99.00%)</title><rect x="0.0000%" y="1973" width="99.0000%" height="15" fill="rgb(208,126,0)" fg:x="0" fg:w="495"/><text x="0.2500%" y="1983.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::{{closure}} (495 samples, 99.00%)</title><rect x="0.0000%" y="1957" width="99.0000%" height="15" fill="rgb(244,66,21)" fg:x="0" fg:w="495"/><text x="0.2500%" y="1967.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (495 samples, 99.00%)</title><rect x="0.0000%" y="1941" width="99.0000%" height="15" fill="rgb(222,97,12)" fg:x="0" fg:w="495"/><text x="0.2500%" y="1951.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>single_threaded::main (495 samples, 99.00%)</title><rect x="0.0000%" y="1925" width="99.0000%" height="15" fill="rgb(219,213,19)" fg:x="0" fg:w="495"/><text x="0.2500%" y="1935.50">single_threaded::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (495 samples, 99.00%)</title><rect x="0.0000%" y="1909" width="99.0000%" height="15" fill="rgb(252,169,30)" fg:x="0" fg:w="495"/><text x="0.2500%" y="1919.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (495 samples, 99.00%)</title><rect x="0.0000%" y="1893" width="99.0000%" height="15" fill="rgb(206,32,51)" fg:x="0" fg:w="495"/><text x="0.2500%" y="1903.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (157 samples, 31.40%)</title><rect x="67.6000%" y="1877" width="31.4000%" height="15" fill="rgb(250,172,42)" fg:x="338" fg:w="157"/><text x="67.8500%" y="1887.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (157 samples, 31.40%)</title><rect x="67.6000%" y="1861" width="31.4000%" height="15" fill="rgb(209,34,43)" fg:x="338" fg:w="157"/><text x="67.8500%" y="1871.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>simple_list::immutable::queue::Queue&lt;T&gt;::dequeue (76 samples, 15.20%)</title><rect x="83.8000%" y="1845" width="15.2000%" height="15" fill="rgb(223,11,35)" fg:x="419" fg:w="76"/><text x="84.0500%" y="1855.50">simple_list::immutable:..</text></g><g><title>__rdl_dealloc (2 samples, 0.40%)</title><rect x="98.6000%" y="1829" width="0.4000%" height="15" fill="rgb(251,219,26)" fg:x="493" fg:w="2"/><text x="98.8500%" y="1839.50"></text></g><g><title>__GI___libc_free (2 samples, 0.40%)</title><rect x="99.0000%" y="37" width="0.4000%" height="15" fill="rgb(231,119,3)" fg:x="495" fg:w="2"/><text x="99.2500%" y="47.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.20%)</title><rect x="99.4000%" y="37" width="0.2000%" height="15" fill="rgb(216,97,11)" fg:x="497" fg:w="1"/><text x="99.6500%" y="47.50"></text></g><g><title>all (500 samples, 100%)</title><rect x="0.0000%" y="2069" width="100.0000%" height="15" fill="rgb(223,59,9)" fg:x="0" fg:w="500"/><text x="0.2500%" y="2079.50"></text></g><g><title>single_threaded (500 samples, 100.00%)</title><rect x="0.0000%" y="2053" width="100.0000%" height="15" fill="rgb(233,93,31)" fg:x="0" fg:w="500"/><text x="0.2500%" y="2063.50">single_threaded</text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="2037" width="1.0000%" height="15" fill="rgb(239,81,33)" fg:x="495" fg:w="5"/><text x="99.2500%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="2021" width="1.0000%" height="15" fill="rgb(213,120,34)" fg:x="495" fg:w="5"/><text x="99.2500%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="2005" width="1.0000%" height="15" fill="rgb(243,49,53)" fg:x="495" fg:w="5"/><text x="99.2500%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1989" width="1.0000%" height="15" fill="rgb(247,216,33)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1973" width="1.0000%" height="15" fill="rgb(226,26,14)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1957" width="1.0000%" height="15" fill="rgb(215,49,53)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1941" width="1.0000%" height="15" fill="rgb(245,162,40)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1925" width="1.0000%" height="15" fill="rgb(229,68,17)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1909" width="1.0000%" height="15" fill="rgb(213,182,10)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1893" width="1.0000%" height="15" fill="rgb(245,125,30)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1877" width="1.0000%" height="15" fill="rgb(232,202,2)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1861" width="1.0000%" height="15" fill="rgb(237,140,51)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1845" width="1.0000%" height="15" fill="rgb(236,157,25)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1829" width="1.0000%" height="15" fill="rgb(219,209,0)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1813" width="1.0000%" height="15" fill="rgb(240,116,54)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1797" width="1.0000%" height="15" fill="rgb(216,10,36)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1781" width="1.0000%" height="15" fill="rgb(222,72,44)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1765" width="1.0000%" height="15" fill="rgb(232,159,9)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1749" width="1.0000%" height="15" fill="rgb(210,39,32)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1733" width="1.0000%" height="15" fill="rgb(216,194,45)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1717" width="1.0000%" height="15" fill="rgb(218,18,35)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1701" width="1.0000%" height="15" fill="rgb(207,83,51)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1685" width="1.0000%" height="15" fill="rgb(225,63,43)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1669" width="1.0000%" height="15" fill="rgb(207,57,36)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1653" width="1.0000%" height="15" fill="rgb(216,99,33)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1637" width="1.0000%" height="15" fill="rgb(225,42,16)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1621" width="1.0000%" height="15" fill="rgb(220,201,45)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1605" width="1.0000%" height="15" fill="rgb(225,33,4)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1589" width="1.0000%" height="15" fill="rgb(224,33,50)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1573" width="1.0000%" height="15" fill="rgb(246,198,51)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1557" width="1.0000%" height="15" fill="rgb(205,22,4)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1541" width="1.0000%" height="15" fill="rgb(206,3,8)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1525" width="1.0000%" height="15" fill="rgb(251,23,15)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1509" width="1.0000%" height="15" fill="rgb(252,88,28)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1493" width="1.0000%" height="15" fill="rgb(212,127,14)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1477" width="1.0000%" height="15" fill="rgb(247,145,37)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1461" width="1.0000%" height="15" fill="rgb(209,117,53)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1445" width="1.0000%" height="15" fill="rgb(212,90,42)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1429" width="1.0000%" height="15" fill="rgb(218,164,37)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1413" width="1.0000%" height="15" fill="rgb(246,65,34)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1397" width="1.0000%" height="15" fill="rgb(231,100,33)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1381" width="1.0000%" height="15" fill="rgb(228,126,14)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1365" width="1.0000%" height="15" fill="rgb(215,173,21)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1349" width="1.0000%" height="15" fill="rgb(210,6,40)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1333" width="1.0000%" height="15" fill="rgb(212,48,18)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1317" width="1.0000%" height="15" fill="rgb(230,214,11)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1301" width="1.0000%" height="15" fill="rgb(254,105,39)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1285" width="1.0000%" height="15" fill="rgb(245,158,5)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1269" width="1.0000%" height="15" fill="rgb(249,208,11)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1253" width="1.0000%" height="15" fill="rgb(210,39,28)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1237" width="1.0000%" height="15" fill="rgb(211,56,53)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1221" width="1.0000%" height="15" fill="rgb(226,201,30)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1205" width="1.0000%" height="15" fill="rgb(239,101,34)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1189" width="1.0000%" height="15" fill="rgb(226,209,5)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1173" width="1.0000%" height="15" fill="rgb(250,105,47)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1157" width="1.0000%" height="15" fill="rgb(230,72,3)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1141" width="1.0000%" height="15" fill="rgb(232,218,39)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1125" width="1.0000%" height="15" fill="rgb(248,166,6)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1109" width="1.0000%" height="15" fill="rgb(247,89,20)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1093" width="1.0000%" height="15" fill="rgb(248,130,54)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1077" width="1.0000%" height="15" fill="rgb(234,196,4)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1061" width="1.0000%" height="15" fill="rgb(250,143,31)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1045" width="1.0000%" height="15" fill="rgb(211,110,34)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1029" width="1.0000%" height="15" fill="rgb(215,124,48)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="1013" width="1.0000%" height="15" fill="rgb(216,46,13)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="997" width="1.0000%" height="15" fill="rgb(205,184,25)" fg:x="495" fg:w="5"/><text x="99.2500%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="981" width="1.0000%" height="15" fill="rgb(228,1,10)" fg:x="495" fg:w="5"/><text x="99.2500%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="965" width="1.0000%" height="15" fill="rgb(213,116,27)" fg:x="495" fg:w="5"/><text x="99.2500%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="949" width="1.0000%" height="15" fill="rgb(241,95,50)" fg:x="495" fg:w="5"/><text x="99.2500%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="933" width="1.0000%" height="15" fill="rgb(238,48,32)" fg:x="495" fg:w="5"/><text x="99.2500%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="917" width="1.0000%" height="15" fill="rgb(235,113,49)" fg:x="495" fg:w="5"/><text x="99.2500%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="901" width="1.0000%" height="15" fill="rgb(205,127,43)" fg:x="495" fg:w="5"/><text x="99.2500%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="885" width="1.0000%" height="15" fill="rgb(250,162,2)" fg:x="495" fg:w="5"/><text x="99.2500%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="869" width="1.0000%" height="15" fill="rgb(220,13,41)" fg:x="495" fg:w="5"/><text x="99.2500%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="853" width="1.0000%" height="15" fill="rgb(249,221,25)" fg:x="495" fg:w="5"/><text x="99.2500%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="837" width="1.0000%" height="15" fill="rgb(215,208,19)" fg:x="495" fg:w="5"/><text x="99.2500%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="821" width="1.0000%" height="15" fill="rgb(236,175,2)" fg:x="495" fg:w="5"/><text x="99.2500%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="805" width="1.0000%" height="15" fill="rgb(241,52,2)" fg:x="495" fg:w="5"/><text x="99.2500%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="789" width="1.0000%" height="15" fill="rgb(248,140,14)" fg:x="495" fg:w="5"/><text x="99.2500%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="773" width="1.0000%" height="15" fill="rgb(253,22,42)" fg:x="495" fg:w="5"/><text x="99.2500%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="757" width="1.0000%" height="15" fill="rgb(234,61,47)" fg:x="495" fg:w="5"/><text x="99.2500%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="741" width="1.0000%" height="15" fill="rgb(208,226,15)" fg:x="495" fg:w="5"/><text x="99.2500%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="725" width="1.0000%" height="15" fill="rgb(217,221,4)" fg:x="495" fg:w="5"/><text x="99.2500%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="709" width="1.0000%" height="15" fill="rgb(212,174,34)" fg:x="495" fg:w="5"/><text x="99.2500%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="693" width="1.0000%" height="15" fill="rgb(253,83,4)" fg:x="495" fg:w="5"/><text x="99.2500%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="677" width="1.0000%" height="15" fill="rgb(250,195,49)" fg:x="495" fg:w="5"/><text x="99.2500%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="661" width="1.0000%" height="15" fill="rgb(241,192,25)" fg:x="495" fg:w="5"/><text x="99.2500%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="645" width="1.0000%" height="15" fill="rgb(208,124,10)" fg:x="495" fg:w="5"/><text x="99.2500%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="629" width="1.0000%" height="15" fill="rgb(222,33,0)" fg:x="495" fg:w="5"/><text x="99.2500%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="613" width="1.0000%" height="15" fill="rgb(234,209,28)" fg:x="495" fg:w="5"/><text x="99.2500%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="597" width="1.0000%" height="15" fill="rgb(224,11,23)" fg:x="495" fg:w="5"/><text x="99.2500%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="581" width="1.0000%" height="15" fill="rgb(232,99,1)" fg:x="495" fg:w="5"/><text x="99.2500%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="565" width="1.0000%" height="15" fill="rgb(237,95,45)" fg:x="495" fg:w="5"/><text x="99.2500%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="549" width="1.0000%" height="15" fill="rgb(208,109,11)" fg:x="495" fg:w="5"/><text x="99.2500%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="533" width="1.0000%" height="15" fill="rgb(216,190,48)" fg:x="495" fg:w="5"/><text x="99.2500%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="517" width="1.0000%" height="15" fill="rgb(251,171,36)" fg:x="495" fg:w="5"/><text x="99.2500%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="501" width="1.0000%" height="15" fill="rgb(230,62,22)" fg:x="495" fg:w="5"/><text x="99.2500%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="485" width="1.0000%" height="15" fill="rgb(225,114,35)" fg:x="495" fg:w="5"/><text x="99.2500%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="469" width="1.0000%" height="15" fill="rgb(215,118,42)" fg:x="495" fg:w="5"/><text x="99.2500%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="453" width="1.0000%" height="15" fill="rgb(243,119,21)" fg:x="495" fg:w="5"/><text x="99.2500%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="437" width="1.0000%" height="15" fill="rgb(252,177,53)" fg:x="495" fg:w="5"/><text x="99.2500%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="421" width="1.0000%" height="15" fill="rgb(237,209,29)" fg:x="495" fg:w="5"/><text x="99.2500%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="405" width="1.0000%" height="15" fill="rgb(212,65,23)" fg:x="495" fg:w="5"/><text x="99.2500%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="389" width="1.0000%" height="15" fill="rgb(230,222,46)" fg:x="495" fg:w="5"/><text x="99.2500%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="373" width="1.0000%" height="15" fill="rgb(215,135,32)" fg:x="495" fg:w="5"/><text x="99.2500%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="357" width="1.0000%" height="15" fill="rgb(246,101,22)" fg:x="495" fg:w="5"/><text x="99.2500%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="341" width="1.0000%" height="15" fill="rgb(206,107,13)" fg:x="495" fg:w="5"/><text x="99.2500%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="325" width="1.0000%" height="15" fill="rgb(250,100,44)" fg:x="495" fg:w="5"/><text x="99.2500%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="309" width="1.0000%" height="15" fill="rgb(231,147,38)" fg:x="495" fg:w="5"/><text x="99.2500%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="293" width="1.0000%" height="15" fill="rgb(229,8,40)" fg:x="495" fg:w="5"/><text x="99.2500%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="277" width="1.0000%" height="15" fill="rgb(221,135,30)" fg:x="495" fg:w="5"/><text x="99.2500%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="261" width="1.0000%" height="15" fill="rgb(249,193,18)" fg:x="495" fg:w="5"/><text x="99.2500%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="245" width="1.0000%" height="15" fill="rgb(209,133,39)" fg:x="495" fg:w="5"/><text x="99.2500%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="229" width="1.0000%" height="15" fill="rgb(232,100,14)" fg:x="495" fg:w="5"/><text x="99.2500%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="213" width="1.0000%" height="15" fill="rgb(224,185,1)" fg:x="495" fg:w="5"/><text x="99.2500%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="197" width="1.0000%" height="15" fill="rgb(223,139,8)" fg:x="495" fg:w="5"/><text x="99.2500%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="181" width="1.0000%" height="15" fill="rgb(232,213,38)" fg:x="495" fg:w="5"/><text x="99.2500%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="165" width="1.0000%" height="15" fill="rgb(207,94,22)" fg:x="495" fg:w="5"/><text x="99.2500%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="149" width="1.0000%" height="15" fill="rgb(219,183,54)" fg:x="495" fg:w="5"/><text x="99.2500%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="133" width="1.0000%" height="15" fill="rgb(216,185,54)" fg:x="495" fg:w="5"/><text x="99.2500%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="117" width="1.0000%" height="15" fill="rgb(254,217,39)" fg:x="495" fg:w="5"/><text x="99.2500%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="101" width="1.0000%" height="15" fill="rgb(240,178,23)" fg:x="495" fg:w="5"/><text x="99.2500%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="85" width="1.0000%" height="15" fill="rgb(218,11,47)" fg:x="495" fg:w="5"/><text x="99.2500%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="69" width="1.0000%" height="15" fill="rgb(218,51,51)" fg:x="495" fg:w="5"/><text x="99.2500%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (5 samples, 1.00%)</title><rect x="99.0000%" y="53" width="1.0000%" height="15" fill="rgb(238,126,27)" fg:x="495" fg:w="5"/><text x="99.2500%" y="63.50"></text></g><g><title>core::ptr::drop_in_place&lt;simple_list::immutable::queue::Node&lt;i32&gt;&gt; (2 samples, 0.40%)</title><rect x="99.6000%" y="37" width="0.4000%" height="15" fill="rgb(249,202,22)" fg:x="498" fg:w="2"/><text x="99.8500%" y="47.50"></text></g></svg></svg>